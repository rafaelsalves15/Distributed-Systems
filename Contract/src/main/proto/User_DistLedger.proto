syntax = "proto3";
package pt.tecnico.distledger.contract.user;

// User Interface of the DistLedger Service

message Signature {
  string signerId = 1;
  bytes value = 2;
}




message BalanceRequest {
  string userId = 1;
  repeated int32 prevTimestamp = 2;
}

message SignedBalanceRequest {
  BalanceRequest request = 1;
  Signature signature = 2 ;
}

message BalanceResponse {
  int32 value = 1;
  repeated int32 newTimestamp = 2;
}

message SignedBalanceResponse {
  BalanceResponse response = 1;
  Signature signature = 2;
}

message CreateAccountRequest {
  string userId = 1;
  repeated int32 prevTimestamp = 2;
}

message SignedCreateAccountRequest {
  CreateAccountRequest request = 1;
  Signature signature = 2;
}

message CreateAccountResponse {
  repeated int32 newTimestamp = 1;
}

message SignedCreateAccountResponse {
  CreateAccountResponse response = 1;
  Signature signature = 2;
}

message DeleteAccountRequest {
  string userId = 1;
}

message SignedDeleteAccountRequest {
  DeleteAccountRequest request = 1;
  Signature signature = 2;
}

message DeleteAccountResponse {}

message SignedDeleteAccountResponse {
  DeleteAccountResponse response = 1 ; 
  Signature signature = 2;
}

message TransferToRequest {
  string accountFrom = 1;
  string accountTo = 2;
  int32 amount = 3;
  repeated int32 prevTimestamp = 4;
}

message SignedTransferToRequest {
  TransferToRequest request = 1;
  Signature signature = 2;
}

message TransferToResponse {
  repeated int32 newTimestamp = 1;
}

message SignedTransferToResponse {
  TransferToResponse response = 1;
  Signature signature = 2;
}


message ShareWithOthersRequest {
  string name = 1 ;
  int32 value = 2 ; // entre 1 e 100
  repeated int32 prevTimestamp = 3;
}

message SignedShareWithOthersRequest {
  ShareWithOthersRequest request = 1;
  Signature signature = 2;
}


message ShareWithOthersResponse{
  repeated int32 newTimestamp = 1;
}

message SignedShareWithOthersResponse {
  ShareWithOthersResponse response = 1;
  Signature signature = 2;
}



service UserService {
  rpc balance(BalanceRequest) returns (SignedBalanceResponse);
  rpc createAccount(CreateAccountRequest) returns (SignedCreateAccountResponse);
  rpc deleteAccount(DeleteAccountRequest) returns (SignedDeleteAccountResponse);
  rpc transferTo(TransferToRequest) returns (SignedTransferToResponse);
  rpc shareWithOthers(ShareWithOthersRequest) returns (SignedShareWithOthersResponse);

}
